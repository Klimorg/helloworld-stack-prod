---
x-db-env: &db-env
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_DB: postgres

x-db-monitoring-env: &db-monitoring-env
    PGADMIN_DEFAULT_EMAIL: klimczak.mathieu@pm.me
    PGADMIN_DEFAULT_PASSWORD: 1988
    PGADMIN_LISTEN_PORT: 5050

services:

    backend:
        build:
            context: .
            dockerfile: Dockerfile.backend
        command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0
        environment:
            DEPLOYMENT_COMMIT: toto
        restart: unless-stopped
        volumes:
            - ./app:/opt/app
        labels:
            # Enable Traefik for this specific "backend" service
            # yamllint disable-line rule:line-length
            # needed because of the `--providers.docker.exposedbydefault=false` command in the
            # docker-compose.traefik.yml file
            traefik.enable: true
            # Define the port inside of the Docker service to use
            # yamllint disable-line rule:line-length
            # note thet the name "app" is up to you, the command is `traefik.http.services.{service-name-of-your-choice}.{options-you-want}`
            # yamllint disable-line rule:line-length
            # see https://doc.traefik.io/traefik/routing/providers/marathon/#services
            traefik.http.services.app-dev.loadbalancer.server.port: 8000
            # HTTP
            # Make Traefik use this domain in HTTP
            # traefik.http.routers.{router-name-of-your-choice}.
            # yamllint disable-line rule:line-length
            # see https://doc.traefik.io/traefik/routing/providers/marathon/#routers
            # yamllint disable-line rule:line-length
            # The entrypoints corresponds to the one we created `--entrypoints.http.address=:80`
            # in the docker-compose.traefik.yml file
            traefik.http.routers.app-dev-http.entrypoints: http
            traefik.http.routers.app-dev-http.rule: Host(`api.localhost`)
            #  && PathPrefix(`/test`)
            # Use the Traefik-public network (declared below)
            traefik.docker.network: traefik-public
        networks:
            # Use the public network created to be shared between Traefik and
            # yamllint disable-line rule:line-length
            # any other service that needs to be publicly available with http or https
            - backend-frontend
            - traefik-public
            - db-network
        depends_on:
            - db

    frontend:
        build:
            context: .
            dockerfile: Dockerfile.frontend
        command: streamlit run frontend/main_page.py
        restart: unless-stopped
        volumes:
            - ./frontend:/opt/frontend
        labels:
            # Enable Traefik for this specific "backend" service
            # yamllint disable-line rule:line-length
            # needed because of the `--providers.docker.exposedbydefault=false` command in the
            # docker-compose.traefik.yml file
            traefik.enable: true
            # Define the port inside of the Docker service to use
            # yamllint disable-line rule:line-length
            # note thet the name "app" is up to you, the command is `traefik.http.services.{service-name-of-your-choice}.{options-you-want}`
            # yamllint disable-line rule:line-length
            # see https://doc.traefik.io/traefik/routing/providers/marathon/#services
            traefik.http.services.frontend-dev.loadbalancer.server.port: 8501
            # HTTP
            # Make Traefik use this domain in HTTP
            # traefik.http.routers.{router-name-of-your-choice}.
            # yamllint disable-line rule:line-length
            # see https://doc.traefik.io/traefik/routing/providers/marathon/#routers
            # yamllint disable-line rule:line-length
            # The entrypoints corresponds to the one we created `--entrypoints.http.address=:80`
            # in the docker-compose.traefik.yml file
            traefik.http.routers.frontend-dev-http.entrypoints: http
            # yamllint disable-line rule:line-length
            traefik.http.routers.frontend-dev-http.rule: Host(`frontend.localhost`)
            #  && PathPrefix(`/test`)
            # Use the Traefik-public network (declared below)
            traefik.docker.network: traefik-public
        networks:
            # Use the public network created to be shared between Traefik and
            # yamllint disable-line rule:line-length
            # any other service that needs to be publicly available with http or https
            - backend-frontend
            - traefik-public
        depends_on:
            - backend

    db:
        restart: unless-stopped
        environment:
            <<: *db-env

    db-monitoring:
        image: dpage/pgadmin4:6.6
        container_name: pgadmin
        restart: unless-stopped
        networks:
            - traefik-public
            - db-network
        depends_on:
            - db
        environment:
            <<: *db-monitoring-env
        labels:
            traefik.enable: true
            traefik.http.services.pgadmin-dev.loadBalancer.server.port: 5050
            # HTTP
            # Make Traefik use this domain in HTTP
            # traefik.http.routers.{router-name-of-your-choice}.
            # yamllint disable-line rule:line-length
            # see https://doc.traefik.io/traefik/routing/providers/marathon/#routers
            # yamllint disable-line rule:line-length
            # The entrypoints corresponds to the one we created `--entrypoints.http.address=:80`
            # in the docker-compose.traefik.yml file
            traefik.http.routers.pgadmin-dev-http.entrypoints: http
            # yamllint disable-line rule:line-length
            traefik.http.routers.pgadmin-dev-http.rule: Host(`pgadmin.localhost`)
            # Use the Traefik-public network (declared below)
            traefik.docker.network: traefik-public

    uptime-kuma:
        restart: unless-stopped
        labels:
            traefik.enable: true
            traefik.http.services.kuma-dev.loadBalancer.server.port: 3001
            # HTTP
            # Make Traefik use this domain in HTTP
            # traefik.http.routers.{router-name-of-your-choice}.
            # yamllint disable-line rule:line-length
            # see https://doc.traefik.io/traefik/routing/providers/marathon/#routers
            # yamllint disable-line rule:line-length
            # The entrypoints corresponds to the one we created `--entrypoints.http.address=:80`
            # in the docker-compose.traefik.yml file
            traefik.http.routers.kuma-dev-http.entrypoints: http
            traefik.http.routers.kuma-dev-http.rule: Host(`kuma.localhost`)
            # Use the Traefik-public network (declared below)
            traefik.docker.network: traefik-public
        volumes:
            - uptime-kuma:/app/data
        networks:
            - traefik-public
