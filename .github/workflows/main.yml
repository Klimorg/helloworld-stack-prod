name: Build & Deploy
on:
  push:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable

  deploy:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/deploy
          chmod 600 ~/.ssh/deploy
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/deploy
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Add deploy key to ssh-agent
        run: ssh staging 'eval "$(ssh-agent -s)" && ssh-add ~/.ssh/deploy && ssh-add -l -E md5 && cd test/stack_prod && git fetch && git pull'

      #- name: Stop the server
      #  run: ssh staging 'sudo systemctl stop my-application'
      #- name: Deploy test
      #  uses: appleboy/ssh-action@v0.1.2
      #  with:
      #    host: ${{secrets.SSH_HOST}} # IP address of the server you wish to ssh into
      #    key: ${{secrets.SSH_KEY}} # Private or public key of the server
      #    username: ${{ secrets.SSH_USERNAME }} # User of the server you want to ssh into

      #    script: |
      #      cd test
      #      git clone git@github.com:Klimorg/stack_prod.git
      #      echo 'Deployment successful to digital ocean' >> test_deploy.txt
