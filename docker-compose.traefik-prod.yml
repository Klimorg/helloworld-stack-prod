---
services:

    traefik:
        restart: always
        labels:
            traefik.http.routers.traefik-dashboard-http.rule: Host(`monitor.mathieuklimczak.com`)
            # Use the traefik-public network (declared below)
            # HTTPS
            # Use https
            traefik.http.routers.traefik-dashboard-https.entrypoints: https
            traefik.http.routers.traefik-dashboard-https.rule: Host(`monitor.mathieuklimczak.com`)
            traefik.http.routers.traefik-dashboard-https.tls: true
            traefik.http.routers.traefik-dashboard-https.tls.certresolver: le # Use the "le" (Let's Encrypt) resolver created below
            traefik.http.routers.traefik-dashboard-https.service: api@internal # Use the special Traefik service api@internal with the web UI/dashboard
            traefik.http.middlewares.https-redirect.redirectscheme.scheme: https # https-redirect middleware to redirect HTTP to HTTPS
            traefik.http.middlewares.https-redirect.redirectscheme.permanent: true
            # Middlerware to redirect HTTP to HTTPS
            # Anything that happend to our app on HTTP will be redirect by the middlerware
            # above on HTTPS
            traefik.http.routers.traefik-dashboard-http.middlewares: https-redirect
            # admin-auth middleware with HTTP basic auth
            # Using the env variables USERNAME and HASHED_PASSWORD
            traefik.http.middlewares.admin-auth.basicauth.users: ${USERNAME}:${HASHED_PASSWORD} # Enable HTTP Basic auth, using the middleware created above
            traefik.http.routers.traefik-dashboard-https.middlewares: admin-auth
        command:
            - --providers.docker # Enable Docker in Traefik, so that it reads labels from Docker services
            - --providers.docker.exposedbydefault=false # Do not expose all Docker services, only the ones explicitely exposed
            - --entrypoints.http.address=:80 # Create an entrypoint "http" listening on port 80
            - --entrypoints.https.address=:443 # Create an entrypoint "https" listening on port 443
            - --certificatesresolvers.le.acme.email=klimczak.mathieu@pm.me # Create the certificate resolver "le" for Let's Encrypt, uses the environment variable EMAIL
            - --certificatesresolvers.le.acme.storage=/certificates/acme.json # Store the Let's Encrypt certificates in the mounted volume
            - --certificatesresolvers.le.acme.tlschallenge=true # Use the TLS Challenge for Let's Encrypt
            - --accesslog # Enable the access log, with HTTP requests
            - --log # Enable the Traefik log, for configurations and errors
            - --api # Enable the dashboard and API
